name: Publish NuGet Package

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Authenticate to GitHub Packages
        run: |
          if dotnet nuget list source | grep -q "github"; then
            echo "ðŸ”„ Updating existing GitHub NuGet source..."
            dotnet nuget update source github \
              --source "https://nuget.pkg.github.com/Quantum-Space-Org/index.json" \
              --username "${{ github.actor }}" \
              --password "${{ secrets.GITHUB_TOKEN }}" \
              --store-password-in-clear-text
          else
            echo "âž• Adding GitHub NuGet source..."
            dotnet nuget add source "https://nuget.pkg.github.com/Quantum-Space-Org/index.json" \
              --name github \
              --username "${{ github.actor }}" \
              --password "${{ secrets.GITHUB_TOKEN }}" \
              --store-password-in-clear-text
          fi

      - name: ðŸ”„ Restore dependencies
        run: dotnet restore Quantum.Snowflake.sln
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ðŸ”¨ Build the project
        run: bash IaaC/build.sh
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ðŸš€ Publish packages
        run: bash IaaC/publish.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: âœ… Done
        run: echo "ðŸŽ‰ Package published from tag!"
